#!/usr/bin/env bash

if [[ ! -z $DOCKER_PRELOAD_IMAGES ]]; then
  preload-docker-images $DOCKER_PRELOAD_IMAGES &
fi;

if [[ ! -z $JENKINS_REMOTE_FS ]]; then
  JENKINS_REMOTE_FS=/ci/jenkins
fi;

# Download slave.jar. This ensures that everytime this daemon is loaded, we get the correct slave.jar
# from the Master. We loop endlessly to get the jar, so that if we start before networking, we ensure
# the jar gets loaded anyway.
echo "Getting slave.jar from ${JENKINS_URL}"
RESULT=-1
while [ true ]; do
 curl -s --url $JENKINS_URL/jnlpJars/jenkins-cli.jar --insecure --output jenkins-cli.jar
 RESULT=$?
 if [ $RESULT -eq 0 ]; then
     break
 else
     sleep 60
 fi
done
cat <<EOF | java -jar jenkins-cli.jar -s "$JENKINS_URL" -auth ${USER} create-node $JENKINS_AGENT_NAME
<slave>
     <name>${JENKINS_AGENT_NAME}</name>
     <description></description>
     <numExecutors>${EXECUTORS}</numExecutors>
     <mode>NORMAL</mode>
     <retentionStrategy class="hudson.slaves.RetentionStrategy\$Always"/>
     <launcher class="hudson.slaves.JNLPLauncher"/>
     <label>${LABELS}</label>
   <remoteFS>${JENKINS_REMOTE_FS}</remoteFS>
     <nodeProperties/>
   <userId>${USER}</userId>
</slave>
EOF

#Getting API Token
JENKINS_SECRET="$(curl -s -u $USER $JENKINS_URL/computer/$JENKINS_AGENT_NAME/ | grep -Eo 'slave-agent.jnlp -secret ([a-z0-9]+)' | cut -d ' ' -f 3)"

# The MIT License
#
#  Copyright (c) 2015, CloudBees, Inc.
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

# Usage jenkins-slave.sh [options] -url http://jenkins [SECRET] [AGENT_NAME]
# Optional environment variables :
# * JENKINS_TUNNEL : HOST:PORT for a tunnel to route TCP traffic to jenkins host, when jenkins can't be directly accessed over network
# * JENKINS_URL : alternate jenkins URL
# * JENKINS_SECRET : agent secret, if not set as an argument
# * JENKINS_AGENT_NAME : agent name, if not set as an argument

if [ $# -eq 1 ]; then

    # if `docker run` only has one arguments, we assume user is running alternate command like `bash` to inspect the image
    exec "$@"

else

    # if -tunnel is not provided try env vars
    if [[ "$@" != *"-tunnel "* ]]; then
        if [ ! -z "$JENKINS_TUNNEL" ]; then
            TUNNEL="-tunnel $JENKINS_TUNNEL"
        fi
    fi

    if [ -n "$JENKINS_URL" ]; then
        URL="-url $JENKINS_URL"
    fi

    if [ -z "$JNLP_PROTOCOL_OPTS" ]; then
        echo "Warning: JnlpProtocol3 is disabled by default, use JNLP_PROTOCOL_OPTS to alter the behavior"
        JNLP_PROTOCOL_OPTS="-Dorg.jenkinsci.remoting.engine.JnlpProtocol3.disabled=true"
    fi

    exec java $JAVA_OPTS $JNLP_PROTOCOL_OPTS -cp /usr/share/jenkins/slave.jar hudson.remoting.jnlp.Main -headless $TUNNEL $URL $JENKINS_SECRET $JENKINS_AGENT_NAME "$@"
fi
